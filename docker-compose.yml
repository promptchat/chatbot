version: "3"
services:
  nginx:
    restart: always
    image: nginx:1.15.0
    working_dir: /app
    hostname: nginx
    ports:
      - ${PORT}:80
    volumes:
      - ./sources:/sources
      - ${PWD}/configs/nginx_conf/app.conf:/etc/nginx/conf.d/app.conf
      - ${PWD}/configs/nginx_conf/nginx.conf:/etc/nginx/nginx.conf
      - ${PWD}/configs/nginx_conf/logs:/var/log/nginx
    env_file:
      - variables.env
      - license.txt

  composer:
    image: composer:latest
    working_dir: /sources
    volumes:
      - ./sources:/sources
    command: >
      sh -c "rm -f vendor/autoload.php && composer install --ignore-platform-reqs"


  db:
    image: mysql
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    volumes:
      -  mysql-data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: promptchat
      MYSQL_USER: promptchat
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'

  redis:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    restart: always
    hostname: redis
    volumes:
      - redis-data:/data
  php:
    restart: always
    build:
      context: .
      dockerfile: docker_files/php/Dockerfile
      args:
        uid: ${UID}
    depends_on:
      - composer
      - db
      - redis
      - node-executor
    volumes:
      - ./sources:/sources
      - ${PWD}/configs/php/logs:/var/log/php7.2-fpm.log
    working_dir: /sources
    environment:
      LOG_FILE: logs/laravel.log
      UID: ${PWD}
    env_file:
      - variables.env
      - license.txt

  scheduler:
    restart: always
    build:
      context: .
      dockerfile: docker_files/phpworker/Dockerfile
      args:
        uid: ${UID}
    depends_on:
      - php
    volumes:
      - ./sources:/sources
    working_dir: /sources
    environment:
      CONTAINER_ROLE: scheduler
      LOG_FILE: logs/laravel-scheduler.log
    env_file:
      - variables.env
      - license.txt

  migrator:
    build:
      context: .
      dockerfile: docker_files/phpworker/Dockerfile
      args:
        uid: ${UID}
    depends_on:
      - php
    links:
      - db
    volumes:
      - ./sources:/sources
    working_dir: /sources
    environment:
      CONTAINER_ROLE: migrator
      LOG_FILE: logs/laravel-migrator.log
    env_file:
      - variables.env
      - license.txt

  queue:
    restart: always
    build:
       context: .
       dockerfile: docker_files/phpworker/Dockerfile
       args:
         uid: ${UID}
    depends_on:
      - php
    volumes:
      - ./sources:/sources
    working_dir: /sources
    environment:
      CONTAINER_ROLE: queue
      LOG_FILE: logs/laravel-queue.log
    env_file:
      - variables.env
      - license.txt

  monitor:
    restart: always
    build:
       context: .
       dockerfile: docker_files/phpworker/Dockerfile
       args:
         uid: ${UID}
    depends_on:
      - php
    volumes:
      - ./sources:/sources
    working_dir: /sources
    environment:
      CONTAINER_ROLE: monitor
      LOG_FILE: logs/laravel-monitor.log
    env_file:
      - variables.env
      - license.txt

  node:
    restart: always
    build:
      context: .
      dockerfile: docker_files/node/Dockerfile
    working_dir: /sources
    hostname: node
    volumes:
      - ./sources:/sources
    depends_on:
      - redis

  node-executor:
    image: node:8.15-alpine
    working_dir: /sources
    hostname: redis
    volumes:
      - ./sources:/sources
    command: >
      node nde-executor
d


volumes:
  redis-data:
  mysql-data:
